<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Config.Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Config.Blocker1" xml:space="preserve">
    <value>Blocker processes : if detected backup is interrupted</value>
  </data>
  <data name="Config.Blocker2" xml:space="preserve">
    <value>Insert a Process name :</value>
  </data>
  <data name="Config.Crypto1" xml:space="preserve">
    <value>CryptoSave Configuration</value>
  </data>
  <data name="Config.Crypto2" xml:space="preserve">
    <value>CryptoSave Path :</value>
  </data>
  <data name="Config.Crypto3" xml:space="preserve">
    <value>CryptoSave extensions to encrypt :</value>
  </data>
  <data name="Config.Crypto4" xml:space="preserve">
    <value>Extensions</value>
  </data>
  <data name="Config.FileSize0" xml:space="preserve">
    <value>Size of heavy files</value>
  </data>
  <data name="Config.FileSize1" xml:space="preserve">
    <value>Size:</value>
  </data>
  <data name="Config.FileSize2" xml:space="preserve">
    <value>Unit:</value>
  </data>
  <data name="Config.Languages1" xml:space="preserve">
    <value>Change localization</value>
  </data>
  <data name="Config.Languages2" xml:space="preserve">
    <value>Select a language :</value>
  </data>
  <data name="Config.Log1" xml:space="preserve">
    <value>Log Files Configuration</value>
  </data>
  <data name="Config.Log2" xml:space="preserve">
    <value>Daily Log Path :</value>
  </data>
  <data name="Config.Log3" xml:space="preserve">
    <value>Real-Time Log Path :</value>
  </data>
  <data name="Config.Log4" xml:space="preserve">
    <value>Logs Extension type :</value>
  </data>
  <data name="Config.Priority1" xml:space="preserve">
    <value>Priority files</value>
  </data>
  <data name="Config.Priority3" xml:space="preserve">
    <value>Extension of files to prioritize:</value>
  </data>
  <data name="Config.Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Config.SavePath1" xml:space="preserve">
    <value>Path to backups save file</value>
  </data>
  <data name="Config.SavePath2" xml:space="preserve">
    <value>Insert the path to your backups save file :</value>
  </data>
  <data name="Config.Serv0" xml:space="preserve">
    <value>Remote interface</value>
  </data>
  <data name="Config.Serv1" xml:space="preserve">
    <value>Turn on the server:</value>
  </data>
  <data name="Config.Tab1" xml:space="preserve">
    <value>Log Files</value>
  </data>
  <data name="Config.Tab2" xml:space="preserve">
    <value>CryptoSave</value>
  </data>
  <data name="Config.Tab3" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Config.Tab4" xml:space="preserve">
    <value>Blocker Process</value>
  </data>
  <data name="Config.Tab5" xml:space="preserve">
    <value>Save Paths</value>
  </data>
  <data name="Config.Themes1" xml:space="preserve">
    <value>App theme</value>
  </data>
  <data name="Config.Themes2" xml:space="preserve">
    <value>Theme:</value>
  </data>
  <data name="Home1" xml:space="preserve">
    <value>Welcome !</value>
  </data>
  <data name="ResetConfig" xml:space="preserve">
    <value>Are you sure you want to reset all settings ?</value>
  </data>
  <data name="RunTaskView11" xml:space="preserve">
    <value>Save done</value>
  </data>
  <data name="RunTaskView12" xml:space="preserve">
    <value>saves done</value>
  </data>
  <data name="RunTaskView4" xml:space="preserve">
    <value>A Blocker process is in use (your backups will be done when the process is closed)</value>
  </data>
  <data name="RunTaskView5" xml:space="preserve">
    <value>Processus Error</value>
  </data>
  <data name="RunTaskView6" xml:space="preserve">
    <value>All the saves are done</value>
  </data>
  <data name="Selector1" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Selector2" xml:space="preserve">
    <value>Saves</value>
  </data>
  <data name="Selector3" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="StartupPopup1" xml:space="preserve">
    <value>Proceedings are already underway.</value>
  </data>
  <data name="Task.Add.Title" xml:space="preserve">
    <value>Add a task</value>
  </data>
  <data name="Task.AddButton" xml:space="preserve">
    <value>Add a task</value>
  </data>
  <data name="Task.Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Task.Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Task.Delete" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="Task.DeleteInfo" xml:space="preserve">
    <value>Task deleted successfully</value>
  </data>
  <data name="Task.Edit.Title" xml:space="preserve">
    <value>Edit a task</value>
  </data>
  <data name="Task.Grid.Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Task.Grid.Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Task.Grid.ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Task.Grid.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Task.Grid.Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Task.Grid.Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="Task.Grid.Target" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="Task.Grid.Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Task.LaunchAll" xml:space="preserve">
    <value>Launch every tasks</value>
  </data>
  <data name="Task.LaunchSelect" xml:space="preserve">
    <value>Launch all selected tasks</value>
  </data>
  <data name="Task.Popup.Add1" xml:space="preserve">
    <value>Problem: source doesn't exist</value>
  </data>
  <data name="Task.Popup.Add2" xml:space="preserve">
    <value>Problem: target doesn't exist</value>
  </data>
  <data name="Task.Popup.Add3" xml:space="preserve">
    <value>Problem: source and target doesn't exist</value>
  </data>
  <data name="Task.Popup.Add4" xml:space="preserve">
    <value>Please fill out all the entries</value>
  </data>
  <data name="Task.Popup.Out" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="Task.Popup.Warning" xml:space="preserve">
    <value>Problem</value>
  </data>
  <data name="Task.Prompt1" xml:space="preserve">
    <value>Name :</value>
  </data>
  <data name="Task.Prompt2" xml:space="preserve">
    <value>Source Path :</value>
  </data>
  <data name="Task.Prompt3" xml:space="preserve">
    <value>Target Path :</value>
  </data>
  <data name="Task.Type1" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Task.Type2" xml:space="preserve">
    <value>Differential</value>
  </data>
</root>