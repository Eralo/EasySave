<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Config.Apply" xml:space="preserve">
    <value>Appliquer</value>
  </data>
  <data name="Config.Blocker1" xml:space="preserve">
    <value>Processus bloquants</value>
  </data>
  <data name="Config.Blocker2" xml:space="preserve">
    <value>Processus :</value>
  </data>
  <data name="Config.Crypto1" xml:space="preserve">
    <value>CryptoSave</value>
  </data>
  <data name="Config.Crypto2" xml:space="preserve">
    <value>Chemin du logiciel :</value>
  </data>
  <data name="Config.Crypto3" xml:space="preserve">
    <value>Extensions à chiffrer :</value>
  </data>
  <data name="Config.Crypto4" xml:space="preserve">
    <value>Extensions</value>
  </data>
  <data name="Config.FileSize0" xml:space="preserve">
    <value>Taille minimale des fichiers lourds</value>
  </data>
  <data name="Config.FileSize1" xml:space="preserve">
    <value>Taille minimale :</value>
  </data>
  <data name="Config.FileSize2" xml:space="preserve">
    <value>Unité :</value>
  </data>
  <data name="Config.Languages1" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="Config.Languages2" xml:space="preserve">
    <value>Langue :</value>
  </data>
  <data name="Config.Log1" xml:space="preserve">
    <value>Fichiers de logs</value>
  </data>
  <data name="Config.Log2" xml:space="preserve">
    <value>Chemin des logs journaliers :</value>
  </data>
  <data name="Config.Log3" xml:space="preserve">
    <value>Chemin des logs en temps réel :</value>
  </data>
  <data name="Config.Log4" xml:space="preserve">
    <value>Type d'extension :</value>
  </data>
  <data name="Config.Priority1" xml:space="preserve">
    <value>Fichiers prioritaires</value>
  </data>
  <data name="Config.Priority3" xml:space="preserve">
    <value>Extension à prioriser :</value>
  </data>
  <data name="Config.Reset" xml:space="preserve">
    <value>Réinitialiser</value>
  </data>
  <data name="Config.SavePath1" xml:space="preserve">
    <value>Sauvegarde des tâches</value>
  </data>
  <data name="Config.SavePath2" xml:space="preserve">
    <value>Fichier de sauvegarde :</value>
  </data>
  <data name="Config.Serv0" xml:space="preserve">
    <value>Interface déportée</value>
  </data>
  <data name="Config.Serv1" xml:space="preserve">
    <value>Allumer le serveur :</value>
  </data>
  <data name="Config.Tab1" xml:space="preserve">
    <value>Fichiers logs</value>
  </data>
  <data name="Config.Tab2" xml:space="preserve">
    <value>CryptoSave</value>
  </data>
  <data name="Config.Tab3" xml:space="preserve">
    <value>Langues</value>
  </data>
  <data name="Config.Tab4" xml:space="preserve">
    <value>Processus bloquants</value>
  </data>
  <data name="Config.Tab5" xml:space="preserve">
    <value>Chemin de sauvegarde</value>
  </data>
  <data name="Config.Themes1" xml:space="preserve">
    <value>Thème de l'application</value>
  </data>
  <data name="Config.Themes2" xml:space="preserve">
    <value>Thème : </value>
  </data>
  <data name="Home1" xml:space="preserve">
    <value>Bienvenue !</value>
  </data>
  <data name="ResetConfig" xml:space="preserve">
    <value>Voulez vous vraiment réinitialiser les paramètres ?</value>
  </data>
  <data name="RunTaskView11" xml:space="preserve">
    <value>Sauvegarde effectuée</value>
  </data>
  <data name="RunTaskView12" xml:space="preserve">
    <value>sauvegardes effectuées</value>
  </data>
  <data name="RunTaskView4" xml:space="preserve">
    <value>Un processus Bloquant est en cours d'utilisation (vos sauvegardes seront effectuées lorsque le processus sera fermé)</value>
  </data>
  <data name="RunTaskView5" xml:space="preserve">
    <value>Processus Erreur</value>
  </data>
  <data name="RunTaskView6" xml:space="preserve">
    <value>Toutes les sauvegardes ont été effectuées</value>
  </data>
  <data name="Selector1" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="Selector2" xml:space="preserve">
    <value>Sauvegarde</value>
  </data>
  <data name="Selector3" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="StartupPopup1" xml:space="preserve">
    <value>Une instance est déjà en cours.</value>
  </data>
  <data name="Task.Add.Title" xml:space="preserve">
    <value>Ajouter une tâche</value>
  </data>
  <data name="Task.Add1" xml:space="preserve">
    <value>Nom :</value>
  </data>
  <data name="Task.Add2" xml:space="preserve">
    <value>Source :</value>
  </data>
  <data name="Task.Add3" xml:space="preserve">
    <value>Cible :</value>
  </data>
  <data name="Task.AddButton" xml:space="preserve">
    <value>Ajouter une tâche</value>
  </data>
  <data name="Task.Apply" xml:space="preserve">
    <value>Valider</value>
  </data>
  <data name="Task.Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Task.Delete" xml:space="preserve">
    <value>Tâche supprimée avec succès</value>
  </data>
  <data name="Task.DeleteInfo" xml:space="preserve">
    <value>Résultat</value>
  </data>
  <data name="Task.Edit.Title" xml:space="preserve">
    <value>Editer une tâche</value>
  </data>
  <data name="Task.Grid.Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Task.Grid.Edit" xml:space="preserve">
    <value>Editer</value>
  </data>
  <data name="Task.Grid.ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Task.Grid.Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="Task.Grid.Select" xml:space="preserve">
    <value>Sélectionner</value>
  </data>
  <data name="Task.Grid.Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="Task.Grid.Target" xml:space="preserve">
    <value>Cible</value>
  </data>
  <data name="Task.Grid.Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Task.LaunchAll" xml:space="preserve">
    <value>Lancer toutes les tâches</value>
  </data>
  <data name="Task.LaunchSelect" xml:space="preserve">
    <value>Lancer les tâches sélectionnées</value>
  </data>
  <data name="Task.Popup.Add1" xml:space="preserve">
    <value>Problème : la source n'existe pas</value>
  </data>
  <data name="Task.Popup.Add2" xml:space="preserve">
    <value>Problème : la cible n'existe pas</value>
  </data>
  <data name="Task.Popup.Add3" xml:space="preserve">
    <value>Problème : ni la source ni la cible n'existent</value>
  </data>
  <data name="Task.Popup.Add4" xml:space="preserve">
    <value>Veuillez fournir toutes les informations</value>
  </data>
  <data name="Task.Popup.Out" xml:space="preserve">
    <value>Résultat</value>
  </data>
  <data name="Task.Popup.Warning" xml:space="preserve">
    <value>Problème</value>
  </data>
  <data name="Task.Type1" xml:space="preserve">
    <value>Complète</value>
  </data>
  <data name="Task.Type2" xml:space="preserve">
    <value>Differentielle</value>
  </data>
</root>